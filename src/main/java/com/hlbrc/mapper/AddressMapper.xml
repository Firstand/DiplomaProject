<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hlbrc.mapper.IAddressMapper">
  <resultMap id="BaseResultMap" type="com.hlbrc.entity.Address">
    <id column="addressId" jdbcType="INTEGER" property="addressid" />
    <result column="dis_id" jdbcType="INTEGER" property="disId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="address_detail" jdbcType="VARCHAR" property="addressDetail" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="past_tode" jdbcType="VARCHAR" property="pastTode" />
    <result column="is_default" jdbcType="INTEGER" property="isDefault" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    addressId, dis_id, user_id, name, tel, address_detail, remark, creat_time, past_tode, 
    is_default
  </sql>
  <select id="selectByExample" parameterType="com.hlbrc.entity.AddressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from address
    where addressId = #{addressid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from address
    where addressId = #{addressid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hlbrc.entity.AddressExample">
    delete from address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hlbrc.entity.Address">
    insert into address (addressId, dis_id, user_id, 
      name, tel, address_detail, 
      remark, creat_time, past_tode, 
      is_default)
    values (#{addressid,jdbcType=INTEGER}, #{disId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{addressDetail,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{creatTime,jdbcType=TIMESTAMP}, #{pastTode,jdbcType=VARCHAR}, 
      #{isDefault,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hlbrc.entity.Address">
    insert into address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="addressid != null">
        addressId,
      </if>
      <if test="disId != null">
        dis_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="addressDetail != null">
        address_detail,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="creatTime != null">
        creat_time,
      </if>
      <if test="pastTode != null">
        past_tode,
      </if>
      <if test="isDefault != null">
        is_default,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="addressid != null">
        #{addressid,jdbcType=INTEGER},
      </if>
      <if test="disId != null">
        #{disId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="addressDetail != null">
        #{addressDetail,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null">
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pastTode != null">
        #{pastTode,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null">
        #{isDefault,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hlbrc.entity.AddressExample" resultType="java.lang.Long">
    select count(*) from address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update address
    <set>
      <if test="record.addressid != null">
        addressId = #{record.addressid,jdbcType=INTEGER},
      </if>
      <if test="record.disId != null">
        dis_id = #{record.disId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.addressDetail != null">
        address_detail = #{record.addressDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.creatTime != null">
        creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pastTode != null">
        past_tode = #{record.pastTode,jdbcType=VARCHAR},
      </if>
      <if test="record.isDefault != null">
        is_default = #{record.isDefault,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update address
    set addressId = #{record.addressid,jdbcType=INTEGER},
      dis_id = #{record.disId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      address_detail = #{record.addressDetail,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      past_tode = #{record.pastTode,jdbcType=VARCHAR},
      is_default = #{record.isDefault,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hlbrc.entity.Address">
    update address
    <set>
      <if test="disId != null">
        dis_id = #{disId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="addressDetail != null">
        address_detail = #{addressDetail,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null">
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pastTode != null">
        past_tode = #{pastTode,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null">
        is_default = #{isDefault,jdbcType=INTEGER},
      </if>
    </set>
    where addressId = #{addressid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hlbrc.entity.Address">
    update address
    set dis_id = #{disId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      address_detail = #{addressDetail,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      past_tode = #{pastTode,jdbcType=VARCHAR},
      is_default = #{isDefault,jdbcType=INTEGER}
    where addressId = #{addressid,jdbcType=INTEGER}
  </update>
</mapper>