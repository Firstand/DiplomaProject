<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hlbrc.mapper.IMyorderMapper">
  <resultMap id="BaseResultMap" type="com.hlbrc.entity.Myorder">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <id column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="store_name" jdbcType="VARCHAR" property="storeName" />
    <result column="total_amount" jdbcType="DOUBLE" property="totalAmount" />
    <result column="receivables_amount" jdbcType="DOUBLE" property="receivablesAmount" />
    <result column="total_num" jdbcType="INTEGER" property="totalNum" />
    <result column="pay_type" jdbcType="INTEGER" property="payType" />
    <result column="pay_status" jdbcType="INTEGER" property="payStatus" />
    <result column="order_type" jdbcType="INTEGER" property="orderType" />
    <result column="order_type_name" jdbcType="VARCHAR" property="orderTypeName" />
    <result column="order_status" jdbcType="INTEGER" property="orderStatus" />
    <result column="order_status_name" jdbcType="VARCHAR" property="orderStatusName" />
    <result column="cancel_type" jdbcType="INTEGER" property="cancelType" />
    <result column="cancel_type_name" jdbcType="VARCHAR" property="cancelTypeName" />
    <result column="cancel_reason" jdbcType="VARCHAR" property="cancelReason" />
    <result column="cancel_time" jdbcType="TIMESTAMP" property="cancelTime" />
    <result column="order_return_status" jdbcType="INTEGER" property="orderReturnStatus" />
    <result column="order_return_status_name" jdbcType="VARCHAR" property="orderReturnStatusName" />
    <result column="ramake" jdbcType="VARCHAR" property="ramake" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="delete_flag" jdbcType="INTEGER" property="deleteFlag" />
    <result column="finsh_time" jdbcType="TIMESTAMP" property="finshTime" />
    <result column="delivery_time" jdbcType="TIMESTAMP" property="deliveryTime" />
    <result column="receive_time" jdbcType="TIMESTAMP" property="receiveTime" />
    <result column="on_credit" jdbcType="INTEGER" property="onCredit" />
    <result column="charge_amount" jdbcType="DOUBLE" property="chargeAmount" />
    <result column="refund_amount" jdbcType="DOUBLE" property="refundAmount" />
    <result column="sale_type" jdbcType="INTEGER" property="saleType" />
    <result column="sale_name" jdbcType="VARCHAR" property="saleName" />
    <result column="in_amount" jdbcType="INTEGER" property="inAmount" />
    <result column="remove_small_amount" jdbcType="INTEGER" property="removeSmallAmount" />
    <result column="service_fee" jdbcType="DOUBLE" property="serviceFee" />
    <result column="reward_amount" jdbcType="DOUBLE" property="rewardAmount" />
    <result column="promotion_apmount" jdbcType="INTEGER" property="promotionApmount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, order_no, user_id, store_name, total_amount, receivables_amount, total_num, 
    pay_type, pay_status, order_type, order_type_name, order_status, order_status_name, 
    cancel_type, cancel_type_name, cancel_reason, cancel_time, order_return_status, order_return_status_name, 
    ramake, creat_time, delete_flag, finsh_time, delivery_time, receive_time, on_credit, 
    charge_amount, refund_amount, sale_type, sale_name, in_amount, remove_small_amount, 
    service_fee, reward_amount, promotion_apmount
  </sql>
  <select id="selectByExample" parameterType="com.hlbrc.entity.MyorderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from myorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.hlbrc.entity.MyorderKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from myorder
    where order_id = #{orderId,jdbcType=INTEGER}
      and order_no = #{orderNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.hlbrc.entity.MyorderKey">
    delete from myorder
    where order_id = #{orderId,jdbcType=INTEGER}
      and order_no = #{orderNo,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hlbrc.entity.MyorderExample">
    delete from myorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hlbrc.entity.Myorder">
    insert into myorder (order_id, order_no, user_id, 
      store_name, total_amount, receivables_amount, 
      total_num, pay_type, pay_status, 
      order_type, order_type_name, order_status, 
      order_status_name, cancel_type, cancel_type_name, 
      cancel_reason, cancel_time, order_return_status, 
      order_return_status_name, ramake, creat_time, 
      delete_flag, finsh_time, delivery_time, 
      receive_time, on_credit, charge_amount, 
      refund_amount, sale_type, sale_name, 
      in_amount, remove_small_amount, service_fee, 
      reward_amount, promotion_apmount)
    values (#{orderId,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{storeName,jdbcType=VARCHAR}, #{totalAmount,jdbcType=DOUBLE}, #{receivablesAmount,jdbcType=DOUBLE}, 
      #{totalNum,jdbcType=INTEGER}, #{payType,jdbcType=INTEGER}, #{payStatus,jdbcType=INTEGER}, 
      #{orderType,jdbcType=INTEGER}, #{orderTypeName,jdbcType=VARCHAR}, #{orderStatus,jdbcType=INTEGER}, 
      #{orderStatusName,jdbcType=VARCHAR}, #{cancelType,jdbcType=INTEGER}, #{cancelTypeName,jdbcType=VARCHAR}, 
      #{cancelReason,jdbcType=VARCHAR}, #{cancelTime,jdbcType=TIMESTAMP}, #{orderReturnStatus,jdbcType=INTEGER}, 
      #{orderReturnStatusName,jdbcType=VARCHAR}, #{ramake,jdbcType=VARCHAR}, #{creatTime,jdbcType=TIMESTAMP}, 
      #{deleteFlag,jdbcType=INTEGER}, #{finshTime,jdbcType=TIMESTAMP}, #{deliveryTime,jdbcType=TIMESTAMP}, 
      #{receiveTime,jdbcType=TIMESTAMP}, #{onCredit,jdbcType=INTEGER}, #{chargeAmount,jdbcType=DOUBLE}, 
      #{refundAmount,jdbcType=DOUBLE}, #{saleType,jdbcType=INTEGER}, #{saleName,jdbcType=VARCHAR}, 
      #{inAmount,jdbcType=INTEGER}, #{removeSmallAmount,jdbcType=INTEGER}, #{serviceFee,jdbcType=DOUBLE}, 
      #{rewardAmount,jdbcType=DOUBLE}, #{promotionApmount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hlbrc.entity.Myorder">
    insert into myorder
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="storeName != null">
        store_name,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="receivablesAmount != null">
        receivables_amount,
      </if>
      <if test="totalNum != null">
        total_num,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="orderType != null">
        order_type,
      </if>
      <if test="orderTypeName != null">
        order_type_name,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="orderStatusName != null">
        order_status_name,
      </if>
      <if test="cancelType != null">
        cancel_type,
      </if>
      <if test="cancelTypeName != null">
        cancel_type_name,
      </if>
      <if test="cancelReason != null">
        cancel_reason,
      </if>
      <if test="cancelTime != null">
        cancel_time,
      </if>
      <if test="orderReturnStatus != null">
        order_return_status,
      </if>
      <if test="orderReturnStatusName != null">
        order_return_status_name,
      </if>
      <if test="ramake != null">
        ramake,
      </if>
      <if test="creatTime != null">
        creat_time,
      </if>
      <if test="deleteFlag != null">
        delete_flag,
      </if>
      <if test="finshTime != null">
        finsh_time,
      </if>
      <if test="deliveryTime != null">
        delivery_time,
      </if>
      <if test="receiveTime != null">
        receive_time,
      </if>
      <if test="onCredit != null">
        on_credit,
      </if>
      <if test="chargeAmount != null">
        charge_amount,
      </if>
      <if test="refundAmount != null">
        refund_amount,
      </if>
      <if test="saleType != null">
        sale_type,
      </if>
      <if test="saleName != null">
        sale_name,
      </if>
      <if test="inAmount != null">
        in_amount,
      </if>
      <if test="removeSmallAmount != null">
        remove_small_amount,
      </if>
      <if test="serviceFee != null">
        service_fee,
      </if>
      <if test="rewardAmount != null">
        reward_amount,
      </if>
      <if test="promotionApmount != null">
        promotion_apmount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="storeName != null">
        #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DOUBLE},
      </if>
      <if test="receivablesAmount != null">
        #{receivablesAmount,jdbcType=DOUBLE},
      </if>
      <if test="totalNum != null">
        #{totalNum,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="orderType != null">
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="orderTypeName != null">
        #{orderTypeName,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="orderStatusName != null">
        #{orderStatusName,jdbcType=VARCHAR},
      </if>
      <if test="cancelType != null">
        #{cancelType,jdbcType=INTEGER},
      </if>
      <if test="cancelTypeName != null">
        #{cancelTypeName,jdbcType=VARCHAR},
      </if>
      <if test="cancelReason != null">
        #{cancelReason,jdbcType=VARCHAR},
      </if>
      <if test="cancelTime != null">
        #{cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderReturnStatus != null">
        #{orderReturnStatus,jdbcType=INTEGER},
      </if>
      <if test="orderReturnStatusName != null">
        #{orderReturnStatusName,jdbcType=VARCHAR},
      </if>
      <if test="ramake != null">
        #{ramake,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null">
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="finshTime != null">
        #{finshTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deliveryTime != null">
        #{deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveTime != null">
        #{receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="onCredit != null">
        #{onCredit,jdbcType=INTEGER},
      </if>
      <if test="chargeAmount != null">
        #{chargeAmount,jdbcType=DOUBLE},
      </if>
      <if test="refundAmount != null">
        #{refundAmount,jdbcType=DOUBLE},
      </if>
      <if test="saleType != null">
        #{saleType,jdbcType=INTEGER},
      </if>
      <if test="saleName != null">
        #{saleName,jdbcType=VARCHAR},
      </if>
      <if test="inAmount != null">
        #{inAmount,jdbcType=INTEGER},
      </if>
      <if test="removeSmallAmount != null">
        #{removeSmallAmount,jdbcType=INTEGER},
      </if>
      <if test="serviceFee != null">
        #{serviceFee,jdbcType=DOUBLE},
      </if>
      <if test="rewardAmount != null">
        #{rewardAmount,jdbcType=DOUBLE},
      </if>
      <if test="promotionApmount != null">
        #{promotionApmount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hlbrc.entity.MyorderExample" resultType="java.lang.Long">
    select count(*) from myorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update myorder
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.storeName != null">
        store_name = #{record.storeName,jdbcType=VARCHAR},
      </if>
      <if test="record.totalAmount != null">
        total_amount = #{record.totalAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.receivablesAmount != null">
        receivables_amount = #{record.receivablesAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.totalNum != null">
        total_num = #{record.totalNum,jdbcType=INTEGER},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=INTEGER},
      </if>
      <if test="record.payStatus != null">
        pay_status = #{record.payStatus,jdbcType=INTEGER},
      </if>
      <if test="record.orderType != null">
        order_type = #{record.orderType,jdbcType=INTEGER},
      </if>
      <if test="record.orderTypeName != null">
        order_type_name = #{record.orderTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.orderStatus != null">
        order_status = #{record.orderStatus,jdbcType=INTEGER},
      </if>
      <if test="record.orderStatusName != null">
        order_status_name = #{record.orderStatusName,jdbcType=VARCHAR},
      </if>
      <if test="record.cancelType != null">
        cancel_type = #{record.cancelType,jdbcType=INTEGER},
      </if>
      <if test="record.cancelTypeName != null">
        cancel_type_name = #{record.cancelTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.cancelReason != null">
        cancel_reason = #{record.cancelReason,jdbcType=VARCHAR},
      </if>
      <if test="record.cancelTime != null">
        cancel_time = #{record.cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderReturnStatus != null">
        order_return_status = #{record.orderReturnStatus,jdbcType=INTEGER},
      </if>
      <if test="record.orderReturnStatusName != null">
        order_return_status_name = #{record.orderReturnStatusName,jdbcType=VARCHAR},
      </if>
      <if test="record.ramake != null">
        ramake = #{record.ramake,jdbcType=VARCHAR},
      </if>
      <if test="record.creatTime != null">
        creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteFlag != null">
        delete_flag = #{record.deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="record.finshTime != null">
        finsh_time = #{record.finshTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deliveryTime != null">
        delivery_time = #{record.deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.receiveTime != null">
        receive_time = #{record.receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.onCredit != null">
        on_credit = #{record.onCredit,jdbcType=INTEGER},
      </if>
      <if test="record.chargeAmount != null">
        charge_amount = #{record.chargeAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.refundAmount != null">
        refund_amount = #{record.refundAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.saleType != null">
        sale_type = #{record.saleType,jdbcType=INTEGER},
      </if>
      <if test="record.saleName != null">
        sale_name = #{record.saleName,jdbcType=VARCHAR},
      </if>
      <if test="record.inAmount != null">
        in_amount = #{record.inAmount,jdbcType=INTEGER},
      </if>
      <if test="record.removeSmallAmount != null">
        remove_small_amount = #{record.removeSmallAmount,jdbcType=INTEGER},
      </if>
      <if test="record.serviceFee != null">
        service_fee = #{record.serviceFee,jdbcType=DOUBLE},
      </if>
      <if test="record.rewardAmount != null">
        reward_amount = #{record.rewardAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.promotionApmount != null">
        promotion_apmount = #{record.promotionApmount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update myorder
    set order_id = #{record.orderId,jdbcType=INTEGER},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      store_name = #{record.storeName,jdbcType=VARCHAR},
      total_amount = #{record.totalAmount,jdbcType=DOUBLE},
      receivables_amount = #{record.receivablesAmount,jdbcType=DOUBLE},
      total_num = #{record.totalNum,jdbcType=INTEGER},
      pay_type = #{record.payType,jdbcType=INTEGER},
      pay_status = #{record.payStatus,jdbcType=INTEGER},
      order_type = #{record.orderType,jdbcType=INTEGER},
      order_type_name = #{record.orderTypeName,jdbcType=VARCHAR},
      order_status = #{record.orderStatus,jdbcType=INTEGER},
      order_status_name = #{record.orderStatusName,jdbcType=VARCHAR},
      cancel_type = #{record.cancelType,jdbcType=INTEGER},
      cancel_type_name = #{record.cancelTypeName,jdbcType=VARCHAR},
      cancel_reason = #{record.cancelReason,jdbcType=VARCHAR},
      cancel_time = #{record.cancelTime,jdbcType=TIMESTAMP},
      order_return_status = #{record.orderReturnStatus,jdbcType=INTEGER},
      order_return_status_name = #{record.orderReturnStatusName,jdbcType=VARCHAR},
      ramake = #{record.ramake,jdbcType=VARCHAR},
      creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      delete_flag = #{record.deleteFlag,jdbcType=INTEGER},
      finsh_time = #{record.finshTime,jdbcType=TIMESTAMP},
      delivery_time = #{record.deliveryTime,jdbcType=TIMESTAMP},
      receive_time = #{record.receiveTime,jdbcType=TIMESTAMP},
      on_credit = #{record.onCredit,jdbcType=INTEGER},
      charge_amount = #{record.chargeAmount,jdbcType=DOUBLE},
      refund_amount = #{record.refundAmount,jdbcType=DOUBLE},
      sale_type = #{record.saleType,jdbcType=INTEGER},
      sale_name = #{record.saleName,jdbcType=VARCHAR},
      in_amount = #{record.inAmount,jdbcType=INTEGER},
      remove_small_amount = #{record.removeSmallAmount,jdbcType=INTEGER},
      service_fee = #{record.serviceFee,jdbcType=DOUBLE},
      reward_amount = #{record.rewardAmount,jdbcType=DOUBLE},
      promotion_apmount = #{record.promotionApmount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hlbrc.entity.Myorder">
    update myorder
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="storeName != null">
        store_name = #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DOUBLE},
      </if>
      <if test="receivablesAmount != null">
        receivables_amount = #{receivablesAmount,jdbcType=DOUBLE},
      </if>
      <if test="totalNum != null">
        total_num = #{totalNum,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="orderType != null">
        order_type = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="orderTypeName != null">
        order_type_name = #{orderTypeName,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="orderStatusName != null">
        order_status_name = #{orderStatusName,jdbcType=VARCHAR},
      </if>
      <if test="cancelType != null">
        cancel_type = #{cancelType,jdbcType=INTEGER},
      </if>
      <if test="cancelTypeName != null">
        cancel_type_name = #{cancelTypeName,jdbcType=VARCHAR},
      </if>
      <if test="cancelReason != null">
        cancel_reason = #{cancelReason,jdbcType=VARCHAR},
      </if>
      <if test="cancelTime != null">
        cancel_time = #{cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderReturnStatus != null">
        order_return_status = #{orderReturnStatus,jdbcType=INTEGER},
      </if>
      <if test="orderReturnStatusName != null">
        order_return_status_name = #{orderReturnStatusName,jdbcType=VARCHAR},
      </if>
      <if test="ramake != null">
        ramake = #{ramake,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null">
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="finshTime != null">
        finsh_time = #{finshTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deliveryTime != null">
        delivery_time = #{deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveTime != null">
        receive_time = #{receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="onCredit != null">
        on_credit = #{onCredit,jdbcType=INTEGER},
      </if>
      <if test="chargeAmount != null">
        charge_amount = #{chargeAmount,jdbcType=DOUBLE},
      </if>
      <if test="refundAmount != null">
        refund_amount = #{refundAmount,jdbcType=DOUBLE},
      </if>
      <if test="saleType != null">
        sale_type = #{saleType,jdbcType=INTEGER},
      </if>
      <if test="saleName != null">
        sale_name = #{saleName,jdbcType=VARCHAR},
      </if>
      <if test="inAmount != null">
        in_amount = #{inAmount,jdbcType=INTEGER},
      </if>
      <if test="removeSmallAmount != null">
        remove_small_amount = #{removeSmallAmount,jdbcType=INTEGER},
      </if>
      <if test="serviceFee != null">
        service_fee = #{serviceFee,jdbcType=DOUBLE},
      </if>
      <if test="rewardAmount != null">
        reward_amount = #{rewardAmount,jdbcType=DOUBLE},
      </if>
      <if test="promotionApmount != null">
        promotion_apmount = #{promotionApmount,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
      and order_no = #{orderNo,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hlbrc.entity.Myorder">
    update myorder
    set user_id = #{userId,jdbcType=INTEGER},
      store_name = #{storeName,jdbcType=VARCHAR},
      total_amount = #{totalAmount,jdbcType=DOUBLE},
      receivables_amount = #{receivablesAmount,jdbcType=DOUBLE},
      total_num = #{totalNum,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=INTEGER},
      pay_status = #{payStatus,jdbcType=INTEGER},
      order_type = #{orderType,jdbcType=INTEGER},
      order_type_name = #{orderTypeName,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=INTEGER},
      order_status_name = #{orderStatusName,jdbcType=VARCHAR},
      cancel_type = #{cancelType,jdbcType=INTEGER},
      cancel_type_name = #{cancelTypeName,jdbcType=VARCHAR},
      cancel_reason = #{cancelReason,jdbcType=VARCHAR},
      cancel_time = #{cancelTime,jdbcType=TIMESTAMP},
      order_return_status = #{orderReturnStatus,jdbcType=INTEGER},
      order_return_status_name = #{orderReturnStatusName,jdbcType=VARCHAR},
      ramake = #{ramake,jdbcType=VARCHAR},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      delete_flag = #{deleteFlag,jdbcType=INTEGER},
      finsh_time = #{finshTime,jdbcType=TIMESTAMP},
      delivery_time = #{deliveryTime,jdbcType=TIMESTAMP},
      receive_time = #{receiveTime,jdbcType=TIMESTAMP},
      on_credit = #{onCredit,jdbcType=INTEGER},
      charge_amount = #{chargeAmount,jdbcType=DOUBLE},
      refund_amount = #{refundAmount,jdbcType=DOUBLE},
      sale_type = #{saleType,jdbcType=INTEGER},
      sale_name = #{saleName,jdbcType=VARCHAR},
      in_amount = #{inAmount,jdbcType=INTEGER},
      remove_small_amount = #{removeSmallAmount,jdbcType=INTEGER},
      service_fee = #{serviceFee,jdbcType=DOUBLE},
      reward_amount = #{rewardAmount,jdbcType=DOUBLE},
      promotion_apmount = #{promotionApmount,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=INTEGER}
      and order_no = #{orderNo,jdbcType=VARCHAR}
  </update>
</mapper>